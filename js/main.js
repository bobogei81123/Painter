// Generated by CoffeeScript 1.9.0
var ColorInput, Main, Tools, main, pencilTool;

Main = (function() {
  function Main() {
    this.mouseStatus = 0;
    this.currentTool = -1;
    this.canvas = $('#main-canvas');
    this.ctx = this.canvas[0].getContext('2d');
    this.tools = [];
  }

  Main.prototype.mouseDown = function() {
    return this.mouseStatus = 1;
  };

  Main.prototype.mouseUp = function() {
    return this.mouseStatus = 0;
  };

  Main.prototype.init = function() {
    var toolDiv;
    toolDiv = $('#toolbox-wrapper');
    return this.tools.forEach(function(tool, idx) {
      var img, wrapDiv;
      img = $('<img>').attr('src', 'img/' + tool.iconImg).addClass('tool-img');
      wrapDiv = $('<div>').addClass('tool-icon').append(img).click(function() {
        return main.changeCurrentTool(idx);
      });
      return toolDiv.append(wrapDiv);
    });
  };

  Main.prototype.changeCurrentTool = function(idx) {
    var toolDiv;
    if (idx === this.currentTool) {
      return;
    }
    toolDiv = $('#toolbox-wrapper');
    return toolDiv.children[idx].addClass('active');
  };

  return Main;

})();

Tools = (function() {
  function Tools(o) {
    _.extend(this, o);
    return;
  }

  return Tools;

})();

ColorInput = (function() {
  function ColorInput(o) {
    _.extend(this, o);
    return;
  }

  ColorInput.prototype.val = function() {
    return '#000000';
  };

  return ColorInput;

})();

pencilTool = new Tools({
  controlVals: [new ColorInput()],
  onMouseDown: function(e) {
    var color, ctx;
    console.log(this);
    main.mouseDown();
    color = this.controlVals[0].val();
    ctx = main.ctx;
    ctx.beginPath();
    ctx.strokeStyle = color;
    ctx.lineWidth = 5;
    return ctx.moveTo(e.offsetX, e.offsetY);
  },
  iconImg: 'pencil-icon.svg'
});

main = new Main();

main.tools = [pencilTool, pencilTool, pencilTool, pencilTool];

main.init();
